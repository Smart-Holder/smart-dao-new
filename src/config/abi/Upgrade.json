{
  "contractName": "Upgrade",
  "abi": [],
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"All contracts that need to implement upgrades should inherit this `Upgrade` contract,  and it should be the first parent class inherited\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/libs/Upgrade.sol\":\"Upgrade\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/libs/Upgrade.sol\":{\"keccak256\":\"0xd7e12e7a35384de03c21838d5205cb820a99fa0de242f70df62c9451f64cb46b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://400e9d3e0363aee3927ad32ba48f26598510f584e1cc89ab710a2ac0e181a4e4\",\"dweb:/ipfs/QmcgnRxT2GoN5aNMJYZ98KN1iSey6UrujCt7ksSwguKKyq\"]}},\"version\":1}",
  "bytecode": "0x6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220904b40144caa85ac35f24f65002d98729a8d870c2abc626f814328b40291741f64736f6c63430008110033",
  "deployedBytecode": "0x6080604052600080fdfea2646970667358221220904b40144caa85ac35f24f65002d98729a8d870c2abc626f814328b40291741f64736f6c63430008110033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "212:61:27:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "212:61:27:-:0;;;;;",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.17;\n\n/**\n\t*@dev All contracts that need to implement upgrades should inherit this `Upgrade` contract, \n\t* and it should be the first parent class inherited\n\t*/\ncontract Upgrade {\n\taddress internal _impl; // impl address\n}\n\n/**\n * @dev The context here is that the externally exposed contract entities are only used to store data, \n * and the implemented business logic should be placed in the impl\n * Any method that calls this contract will be directed to `fallback()`, \n * and then use `delegatecall()` to call the actual implementation and pass the current data context to impl\n */\ncontract ProxyStore is Upgrade {\n\t// The size allocated by Layout Store should be specified by dynamic compilation, \n\t// and the storage size needs to be read from the original contract\n\n\tconstructor(address impl) public {\n\t\t_impl = impl;\n\t}\n\n\tfallback() external payable {\n\t\t(bool suc, bytes memory _data) = _impl.delegatecall(msg.data);\n\t\tassembly {\n\t\t\tlet len := mload(_data)\n\t\t\tlet data := add(_data, 0x20)\n\t\t\tswitch suc\n\t\t\tcase 0 { revert(data, len) }\n\t\t\tdefault { return(data, len) }\n\t\t}\n\t}\n}",
  "sourcePath": "/Users/louis/Project/hc/NFTSwap/SmartHolder/contracts/libs/Upgrade.sol",
  "ast": {
    "absolutePath": "project:/contracts/libs/Upgrade.sol",
    "exportedSymbols": {
      "ProxyStore": [
        7705
      ],
      "Upgrade": [
        7676
      ]
    },
    "id": 7706,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7672,
        "literals": [
          "solidity",
          "0.8",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:27"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Upgrade",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 7673,
          "nodeType": "StructuredDocumentation",
          "src": "57:154:27",
          "text": "@dev All contracts that need to implement upgrades should inherit this `Upgrade` contract, \n and it should be the first parent class inherited"
        },
        "fullyImplemented": true,
        "id": 7676,
        "linearizedBaseContracts": [
          7676
        ],
        "name": "Upgrade",
        "nameLocation": "221:7:27",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 7675,
            "mutability": "mutable",
            "name": "_impl",
            "nameLocation": "249:5:27",
            "nodeType": "VariableDeclaration",
            "scope": 7676,
            "src": "232:22:27",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 7674,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "232:7:27",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          }
        ],
        "scope": 7706,
        "src": "212:61:27",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 7678,
              "name": "Upgrade",
              "nameLocations": [
                "660:7:27"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7676,
              "src": "660:7:27"
            },
            "id": 7679,
            "nodeType": "InheritanceSpecifier",
            "src": "660:7:27"
          }
        ],
        "canonicalName": "ProxyStore",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 7677,
          "nodeType": "StructuredDocumentation",
          "src": "275:361:27",
          "text": " @dev The context here is that the externally exposed contract entities are only used to store data, \n and the implemented business logic should be placed in the impl\n Any method that calls this contract will be directed to `fallback()`, \n and then use `delegatecall()` to call the actual implementation and pass the current data context to impl"
        },
        "fullyImplemented": true,
        "id": 7705,
        "linearizedBaseContracts": [
          7705,
          7676
        ],
        "name": "ProxyStore",
        "nameLocation": "646:10:27",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 7688,
              "nodeType": "Block",
              "src": "858:20:27",
              "statements": [
                {
                  "expression": {
                    "id": 7686,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7684,
                      "name": "_impl",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7675,
                      "src": "862:5:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7685,
                      "name": "impl",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7681,
                      "src": "870:4:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "862:12:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 7687,
                  "nodeType": "ExpressionStatement",
                  "src": "862:12:27"
                }
              ]
            },
            "id": 7689,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7682,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7681,
                  "mutability": "mutable",
                  "name": "impl",
                  "nameLocation": "845:4:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 7689,
                  "src": "837:12:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7680,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "837:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "836:14:27"
            },
            "returnParameters": {
              "id": 7683,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "858:0:27"
            },
            "scope": 7705,
            "src": "825:53:27",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7703,
              "nodeType": "Block",
              "src": "909:224:27",
              "statements": [
                {
                  "assignments": [
                    7693,
                    7695
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7693,
                      "mutability": "mutable",
                      "name": "suc",
                      "nameLocation": "919:3:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 7703,
                      "src": "914:8:27",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 7692,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "914:4:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 7695,
                      "mutability": "mutable",
                      "name": "_data",
                      "nameLocation": "937:5:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 7703,
                      "src": "924:18:27",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 7694,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "924:5:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7701,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 7698,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "965:3:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7699,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "969:4:27",
                        "memberName": "data",
                        "nodeType": "MemberAccess",
                        "src": "965:8:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "expression": {
                        "id": 7696,
                        "name": "_impl",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7675,
                        "src": "946:5:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 7697,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "952:12:27",
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "946:18:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 7700,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "946:28:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "913:61:27"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "987:143:27",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "992:23:27",
                        "value": {
                          "arguments": [
                            {
                              "name": "_data",
                              "nodeType": "YulIdentifier",
                              "src": "1009:5:27"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "1003:5:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1003:12:27"
                        },
                        "variables": [
                          {
                            "name": "len",
                            "nodeType": "YulTypedName",
                            "src": "996:3:27",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1019:28:27",
                        "value": {
                          "arguments": [
                            {
                              "name": "_data",
                              "nodeType": "YulIdentifier",
                              "src": "1035:5:27"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1042:4:27",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "1031:3:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1031:16:27"
                        },
                        "variables": [
                          {
                            "name": "data",
                            "nodeType": "YulTypedName",
                            "src": "1023:4:27",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "cases": [
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "1072:21:27",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "data",
                                        "nodeType": "YulIdentifier",
                                        "src": "1081:4:27"
                                      },
                                      {
                                        "name": "len",
                                        "nodeType": "YulIdentifier",
                                        "src": "1087:3:27"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "revert",
                                      "nodeType": "YulIdentifier",
                                      "src": "1074:6:27"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1074:17:27"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "1074:17:27"
                                }
                              ]
                            },
                            "nodeType": "YulCase",
                            "src": "1065:28:27",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1070:1:27",
                              "type": "",
                              "value": "0"
                            }
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "1105:21:27",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "data",
                                        "nodeType": "YulIdentifier",
                                        "src": "1114:4:27"
                                      },
                                      {
                                        "name": "len",
                                        "nodeType": "YulIdentifier",
                                        "src": "1120:3:27"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "return",
                                      "nodeType": "YulIdentifier",
                                      "src": "1107:6:27"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1107:17:27"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "1107:17:27"
                                }
                              ]
                            },
                            "nodeType": "YulCase",
                            "src": "1097:29:27",
                            "value": "default"
                          }
                        ],
                        "expression": {
                          "name": "suc",
                          "nodeType": "YulIdentifier",
                          "src": "1058:3:27"
                        },
                        "nodeType": "YulSwitch",
                        "src": "1051:75:27"
                      }
                    ]
                  },
                  "evmVersion": "petersburg",
                  "externalReferences": [
                    {
                      "declaration": 7695,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1009:5:27",
                      "valueSize": 1
                    },
                    {
                      "declaration": 7695,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1035:5:27",
                      "valueSize": 1
                    },
                    {
                      "declaration": 7693,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1058:3:27",
                      "valueSize": 1
                    }
                  ],
                  "id": 7702,
                  "nodeType": "InlineAssembly",
                  "src": "978:152:27"
                }
              ]
            },
            "id": 7704,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7690,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "889:2:27"
            },
            "returnParameters": {
              "id": 7691,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "909:0:27"
            },
            "scope": 7705,
            "src": "881:252:27",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 7706,
        "src": "637:498:27",
        "usedErrors": []
      }
    ],
    "src": "32:1103:27"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.17+commit.8df45f5f.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.11",
  "updatedAt": "2023-04-01T07:55:49.851Z",
  "devdoc": {
    "details": "All contracts that need to implement upgrades should inherit this `Upgrade` contract,  and it should be the first parent class inherited",
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}