{
  "contractName": "ERC165",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "CheckInterfaceNoMatch",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "checkInterface",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"CheckInterfaceNoMatch\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"checkInterface\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts may inherit from this and call {_registerInterface} to declare their support of an interface.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas.\"}},\"stateVariables\":{\"_supportedInterfaces\":{\"details\":\"Mapping of interface ids to whether or not it's supported.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/libs/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/libs/ERC165.sol\":{\"keccak256\":\"0xb43a92723cf801780e4a64417212d1b6190010839f156826a537b506ad80d779\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28d267cf5115570ea8639b289713026565b3ec640bbc582e1d24c2162068327f\",\"dweb:/ipfs/QmVkmuv3ztd7vJMyXNSahtteQyZoWuK75mbbbxiYrhs4By\"]},\"project:/contracts/libs/Errors.sol\":{\"keccak256\":\"0xe8f27a64f64424dae9dae5ac826877e949e574588a48a396018a3ab154dfaee1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://830aa212a96be3bc9a216103d5fa4184cba7d9e7912eb529e0dac8bb2ffab561\",\"dweb:/ipfs/QmQzwsPBaub5ppf9wisToRernAxDLQu7jP8aQjxVT7xgsk\"]},\"project:/contracts/libs/Initializable.sol\":{\"keccak256\":\"0x683a411c58ad9c72a6095d3f2eb99bec27f76373a5963999bdc91d97d8ee41c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a236c3ea0b05b150af0d52cdfb10857843f3f540b583d192c2b79f8d88d1bd4a\",\"dweb:/ipfs/QmWayNg4dJfGYtqp1aqsFgx2A88nirvW8jCdKx2HNemPuc\"]},\"project:/contracts/libs/Interface.sol\":{\"keccak256\":\"0xdd3279d636c93327c07f65443423e384095867ac127e255f24776e29e6d5710d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9204e031737c7c03f684a515205b4a5b05ca1487b39a355498c40c4eeed4ab8\",\"dweb:/ipfs/QmfS8oeVUxWAY9b4vJfFwTHjjeM1hJo1mqqyUXbNMKC5cv\"]},\"project:/openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xcee5467d5d873fb75dae6f98c01a8d25dd609f9d0374c7d39217bd5f9539a2d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://546651335214a63d1ea3b1d3297228a1df2165f17063b2e45b589ade861ddedc\",\"dweb:/ipfs/QmNwpHiPBRB6dmNz9WLVYvy2kUhYHZgWBMWRcoDuMsuZt9\"]},\"project:/openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6392f2cfe3a5ee802227fe7a2dfd47096d881aec89bddd214b35c5b46d3cd941\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd9c47a375639888e726a99da718890ba16d17d7ad9eacb0ccc892d46d1b3ee0\",\"dweb:/ipfs/Qmb41W5RUjy2sWg49A2rMnxekSeEk6SvGyJL5tyCCSr7un\"]},\"project:/openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"project:/openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797\",\"dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw\"]},\"project:/openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"project:/openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"project:/openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"project:/openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"project:/openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34\",\"dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR\"]},\"project:/openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"project:/openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"project:/openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"project:/openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"project:/openzeppelin/contracts/utils/structs/EnumerableMap.sol\":{\"keccak256\":\"0x5094b17cb46143943f3206d0738b91a05a7005e979681af7210d534cd3e72f54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a55fbc9ee8080ec3b397e8e32e5dafcff2c377ce44d553bfc93dfce1be2d5b12\",\"dweb:/ipfs/QmYSk6bNHnpKRyNWXmEBKbkPxXi7Hco9JZHHyxMdrZGWpb\"]},\"project:/openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xc3ff3f5c4584e1d9a483ad7ced51ab64523201f4e3d3c65293e4ca8aeb77a961\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7d3dd6067a994690471b5fc71b6f81fac3847798b37d404f74db00b4d3c3d0e\",\"dweb:/ipfs/QmRHF1RarifjNi93RttouNPkYZGyu6CD926PgRDzD5iL35\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610145806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806301ffc9a71461003b5780634c6e425b1461007c575b600080fd5b6100686100493660046100de565b6001600160e01b03191660009081526001602052604090205460ff1690565b604051901515815260200160405180910390f35b61008f61008a3660046100de565b610091565b005b6001600160e01b0319811660009081526001602052604090205460ff166100db57604051632aae78ef60e01b81526001600160e01b03198216600482015260240160405180910390fd5b50565b6000602082840312156100f057600080fd5b81356001600160e01b03198116811461010857600080fd5b939250505056fea264697066735822122037922db1e563aff8daf7448c8b1784c612621c092669e68210d38cc49c981a6864736f6c63430008110033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c806301ffc9a71461003b5780634c6e425b1461007c575b600080fd5b6100686100493660046100de565b6001600160e01b03191660009081526001602052604090205460ff1690565b604051901515815260200160405180910390f35b61008f61008a3660046100de565b610091565b005b6001600160e01b0319811660009081526001602052604090205460ff166100db57604051632aae78ef60e01b81526001600160e01b03198216600482015260240160405180910390fd5b50565b6000602082840312156100f057600080fd5b81356001600160e01b03198116811461010857600080fd5b939250505056fea264697066735822122037922db1e563aff8daf7448c8b1784c612621c092669e68210d38cc49c981a6864736f6c63430008110033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:701:50",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:50",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "83:217:50",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "129:16:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "138:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "141:1:50",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "131:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "131:12:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "131:12:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "104:7:50"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "113:9:50"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "100:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "100:23:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "125:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "96:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "96:32:50"
                  },
                  "nodeType": "YulIf",
                  "src": "93:52:50"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "154:36:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "180:9:50"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "167:12:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "167:23:50"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "158:5:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "254:16:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "263:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "266:1:50",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "256:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "256:12:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "256:12:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "212:5:50"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "223:5:50"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "234:3:50",
                                    "type": "",
                                    "value": "224"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "239:10:50",
                                    "type": "",
                                    "value": "0xffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "230:3:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "230:20:50"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "219:3:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "219:32:50"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "209:2:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "209:43:50"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "202:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "202:51:50"
                  },
                  "nodeType": "YulIf",
                  "src": "199:71:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "279:15:50",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "289:5:50"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "279:6:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "49:9:50",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "60:7:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "72:6:50",
                "type": ""
              }
            ],
            "src": "14:286:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "400:92:50",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "410:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "422:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "433:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "418:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "418:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "410:4:50"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "452:9:50"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "477:6:50"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "470:6:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "470:14:50"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "463:6:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "463:22:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "445:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "445:41:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "445:41:50"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "369:9:50",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "380:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "391:4:50",
                "type": ""
              }
            ],
            "src": "305:187:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "596:103:50",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "606:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "618:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "629:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "614:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "614:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "606:4:50"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "648:9:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "663:6:50"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "675:3:50",
                                "type": "",
                                "value": "224"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "680:10:50",
                                "type": "",
                                "value": "0xffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "671:3:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "671:20:50"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "659:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "659:33:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "641:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "641:52:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "641:52:50"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "565:9:50",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "576:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "587:4:50",
                "type": ""
              }
            ],
            "src": "497:202:50"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, shl(224, 0xffffffff)))\n    }\n}",
      "id": 50,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "309:1524:23:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "309:1524:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1120:139;;;;;;:::i;:::-;-1:-1:-1;;;;;;1222:33:23;1205:4;1222:33;;;:20;:33;;;;;;;;;1120:139;;;;470:14:50;;463:22;445:41;;433:2;418:18;1120:139:23;;;;;;;841:147;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;;1222:33:23;;1205:4;1222:33;;;:20;:33;;;;;;;;903:81;;950:34;;-1:-1:-1;;;950:34:23;;-1:-1:-1;;;;;;659:33:50;;950:34:23;;;641:52:50;614:18;;950:34:23;;;;;;;903:81;841:147;:::o;14:286:50:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:50;;209:43;;199:71;;266:1;263;256:12;199:71;289:5;14:286;-1:-1:-1;;;14:286:50:o",
  "source": "//SPDX-License-Identifier: MIT\npragma solidity ~0.8.17;\n\nimport './Errors.sol';\nimport './Initializable.sol';\nimport './Interface.sol';\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts may inherit from this and call {_registerInterface} to declare\n * their support of an interface.\n */\ncontract ERC165 is Initializable, IERC165 {\n\t/*\n\t * bytes4(keccak256('supportsInterface(bytes4)')) == 0x01ffc9a7\n\t */\n\tbytes4 private constant _INTERFACE_ID_ERC165 = 0x01ffc9a7;\n\n\t/**\n\t * @dev Mapping of interface ids to whether or not it's supported.\n\t */\n\tmapping(bytes4 => bool) private _supportedInterfaces;\n\n\tfunction initERC165() internal initializer {\n\t\t// Derived contracts need only register support for their own interfaces,\n\t\t// we register support for ERC165 itself here\n\t\t_registerInterface(_INTERFACE_ID_ERC165);\n\t}\n\n\tfunction checkInterface(bytes4 interfaceId) view external {\n\t\tif (!supportsInterface(interfaceId))\n\t\t\trevert CheckInterfaceNoMatch(interfaceId);\n\t}\n\n\t/**\n\t\t* @dev See {IERC165-supportsInterface}.\n\t\t*\n\t\t* Time complexity O(1), guaranteed to always use less than 30 000 gas.\n\t\t*/\n\tfunction supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n\t\treturn _supportedInterfaces[interfaceId];\n\t}\n\n\t/**\n\t * @dev Registers the contract as an implementer of the interface defined by\n\t * `interfaceId`. Support of the actual ERC165 interface is automatic and\n\t * registering its interface id is not required.\n\t *\n\t * See {IERC165-supportsInterface}.\n\t *\n\t * Requirements:\n\t *\n\t * - `interfaceId` cannot be the ERC165 invalid interface (`0xffffffff`).\n\t */\n\tfunction _registerInterface(bytes4 interfaceId) internal virtual {\n\t\trequire(interfaceId != 0xffffffff, \"ERC165: invalid interface id\");\n\t\t_supportedInterfaces[interfaceId] = true;\n\t}\n\n\t//uint256[49] private __gap;\n}\n",
  "sourcePath": "/Users/louis/Project/hc/NFTSwap/SmartHolder/contracts/libs/ERC165.sol",
  "ast": {
    "absolutePath": "project:/contracts/libs/ERC165.sol",
    "exportedSymbols": {
      "Address": [
        11756
      ],
      "AddressEmpty": [
        9972
      ],
      "AmountMinimumLimit": [
        10046
      ],
      "ApprovalToOwnerInERC721": [
        9984
      ],
      "ApproveAllToCallerInERC721": [
        9986
      ],
      "AssetNonExistsInAssetShell": [
        9994
      ],
      "CheckInterfaceNoMatch": [
        9970
      ],
      "CreateProposalLifespanLimitError": [
        10018
      ],
      "CreateProposalLoopTimeLimitError": [
        10020
      ],
      "CreateProposalVotePassEateLimitError": [
        10016
      ],
      "DuplicateVoteError": [
        10028
      ],
      "ERC165": [
        8295
      ],
      "EnumerableMap": [
        14264
      ],
      "EnumerableSet": [
        14877
      ],
      "Errors": [
        10047
      ],
      "IAsset": [
        10196
      ],
      "IAssetShell": [
        10189
      ],
      "IDAO": [
        10531
      ],
      "IDAOs": [
        10556
      ],
      "IERC1155": [
        11075
      ],
      "IERC1155MetadataURI": [
        11131
      ],
      "IERC1155Receiver": [
        11116
      ],
      "IERC1155_1": [
        10121
      ],
      "IERC165": [
        11965
      ],
      "IERC20": [
        11209
      ],
      "IERC20Metadata": [
        11234
      ],
      "IERC20_1": [
        10086
      ],
      "IERC721": [
        11350
      ],
      "IERC721Enumerable": [
        11399
      ],
      "IERC721Metadata": [
        11426
      ],
      "IERC721Receiver": [
        11368
      ],
      "IERC721_1": [
        10101
      ],
      "ILedger": [
        10292
      ],
      "IMember": [
        10392
      ],
      "IModule": [
        10156
      ],
      "IOpenseaContractURI": [
        10127
      ],
      "IShare": [
        10199
      ],
      "IVotePool": [
        10474
      ],
      "Initializable": [
        10953
      ],
      "Initializable_": [
        10051
      ],
      "InsufficientBalance": [
        9954
      ],
      "InsufficientVotesInMember": [
        10002
      ],
      "LockTokenIDEmptyInAssetShell": [
        9998
      ],
      "LockTokenIDPreviousOwnerEmptyInAssetShell": [
        10000
      ],
      "MaximumSupplyLimitInShare": [
        10038
      ],
      "MemberAlreadyExists": [
        10006
      ],
      "MemberNonExists": [
        10004
      ],
      "MemberRequestJoinAlreadyExists": [
        10008
      ],
      "MethodNotImplemented": [
        10036
      ],
      "NeedToUnlockAssetFirst": [
        9996
      ],
      "NoPermissionToMintNFTs1155": [
        10042
      ],
      "NonContractAddress": [
        9992
      ],
      "NonERC721ReceiverImplementer": [
        9988
      ],
      "OnlyOwnerAvailable": [
        9990
      ],
      "PayableAmountZero": [
        9958
      ],
      "PayableInsufficientAmount": [
        9956
      ],
      "PermissionDenied": [
        9962
      ],
      "PermissionDeniedForMember": [
        9966
      ],
      "PermissionDeniedForOnlyDAO": [
        9964
      ],
      "PermissionDeniedInERC721": [
        9976
      ],
      "ProposalAlreadyExistsInVotePool": [
        10012
      ],
      "ProposalClosed": [
        10024
      ],
      "ProposalDefaultLifespanLimitError": [
        10014
      ],
      "ProposalNonExistsInVotePool": [
        10010
      ],
      "ProposalNotPassed": [
        10034
      ],
      "SafeMath": [
        13142
      ],
      "SendValueFail": [
        9960
      ],
      "TokenIDAlreadyExistsInAsset": [
        10044
      ],
      "TokenIDAlreadyMintedInERC721": [
        9982
      ],
      "TokenIDEmpty": [
        9974
      ],
      "TokenIDMustEvenNumberInAsset": [
        10040
      ],
      "TokenIDNonExistentInERC721": [
        9980
      ],
      "TransferOfTokenIDThatIsNotOwnInERC721": [
        9978
      ],
      "VoteInsufficientVotes": [
        10030
      ],
      "VotesZero": [
        10022
      ],
      "VotingInProgress": [
        10032
      ],
      "VotingMemberNoMatch": [
        10026
      ]
    },
    "id": 8296,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8219,
        "literals": [
          "solidity",
          "~",
          "0.8",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "31:24:23"
      },
      {
        "absolutePath": "project:/contracts/libs/Errors.sol",
        "file": "./Errors.sol",
        "id": 8220,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8296,
        "sourceUnit": 10048,
        "src": "57:22:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/libs/Initializable.sol",
        "file": "./Initializable.sol",
        "id": 8221,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8296,
        "sourceUnit": 10052,
        "src": "80:29:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/libs/Interface.sol",
        "file": "./Interface.sol",
        "id": 8222,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8296,
        "sourceUnit": 10557,
        "src": "110:25:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 8224,
              "name": "Initializable",
              "nameLocations": [
                "328:13:23"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 10953,
              "src": "328:13:23"
            },
            "id": 8225,
            "nodeType": "InheritanceSpecifier",
            "src": "328:13:23"
          },
          {
            "baseName": {
              "id": 8226,
              "name": "IERC165",
              "nameLocations": [
                "343:7:23"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11965,
              "src": "343:7:23"
            },
            "id": 8227,
            "nodeType": "InheritanceSpecifier",
            "src": "343:7:23"
          }
        ],
        "canonicalName": "ERC165",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 8223,
          "nodeType": "StructuredDocumentation",
          "src": "137:171:23",
          "text": " @dev Implementation of the {IERC165} interface.\n Contracts may inherit from this and call {_registerInterface} to declare\n their support of an interface."
        },
        "fullyImplemented": true,
        "id": 8295,
        "linearizedBaseContracts": [
          8295,
          11965,
          10953
        ],
        "name": "ERC165",
        "nameLocation": "318:6:23",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 8230,
            "mutability": "constant",
            "name": "_INTERFACE_ID_ERC165",
            "nameLocation": "452:20:23",
            "nodeType": "VariableDeclaration",
            "scope": 8295,
            "src": "428:57:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes4",
              "typeString": "bytes4"
            },
            "typeName": {
              "id": 8228,
              "name": "bytes4",
              "nodeType": "ElementaryTypeName",
              "src": "428:6:23",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "value": {
              "hexValue": "30783031666663396137",
              "id": 8229,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "475:10:23",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_33540519_by_1",
                "typeString": "int_const 33540519"
              },
              "value": "0x01ffc9a7"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "documentation": {
              "id": 8231,
              "nodeType": "StructuredDocumentation",
              "src": "489:76:23",
              "text": " @dev Mapping of interface ids to whether or not it's supported."
            },
            "id": 8235,
            "mutability": "mutable",
            "name": "_supportedInterfaces",
            "nameLocation": "599:20:23",
            "nodeType": "VariableDeclaration",
            "scope": 8295,
            "src": "567:52:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
              "typeString": "mapping(bytes4 => bool)"
            },
            "typeName": {
              "id": 8234,
              "keyType": {
                "id": 8232,
                "name": "bytes4",
                "nodeType": "ElementaryTypeName",
                "src": "575:6:23",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes4",
                  "typeString": "bytes4"
                }
              },
              "nodeType": "Mapping",
              "src": "567:23:23",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
                "typeString": "mapping(bytes4 => bool)"
              },
              "valueType": {
                "id": 8233,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "585:4:23",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 8244,
              "nodeType": "Block",
              "src": "666:172:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8241,
                        "name": "_INTERFACE_ID_ERC165",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8230,
                        "src": "813:20:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "id": 8240,
                      "name": "_registerInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8294,
                      "src": "794:18:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4)"
                      }
                    },
                    "id": 8242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "794:40:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8243,
                  "nodeType": "ExpressionStatement",
                  "src": "794:40:23"
                }
              ]
            },
            "id": 8245,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 8238,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 8237,
                  "name": "initializer",
                  "nameLocations": [
                    "654:11:23"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10855,
                  "src": "654:11:23"
                },
                "nodeType": "ModifierInvocation",
                "src": "654:11:23"
              }
            ],
            "name": "initERC165",
            "nameLocation": "632:10:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8236,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "642:2:23"
            },
            "returnParameters": {
              "id": 8239,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "666:0:23"
            },
            "scope": 8295,
            "src": "623:215:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 8259,
              "nodeType": "Block",
              "src": "899:89:23",
              "statements": [
                {
                  "condition": {
                    "id": 8253,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "907:31:23",
                    "subExpression": {
                      "arguments": [
                        {
                          "id": 8251,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8247,
                          "src": "926:11:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "id": 8250,
                        "name": "supportsInterface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8274,
                        "src": "908:17:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 8252,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "908:30:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8258,
                  "nodeType": "IfStatement",
                  "src": "903:81:23",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [
                        {
                          "id": 8255,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8247,
                          "src": "972:11:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "id": 8254,
                        "name": "CheckInterfaceNoMatch",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9970,
                        "src": "950:21:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$_t_bytes4_$returns$__$",
                          "typeString": "function (bytes4) pure"
                        }
                      },
                      "id": 8256,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "950:34:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 8257,
                    "nodeType": "RevertStatement",
                    "src": "943:41:23"
                  }
                }
              ]
            },
            "functionSelector": "4c6e425b",
            "id": 8260,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkInterface",
            "nameLocation": "850:14:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8248,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8247,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "872:11:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 8260,
                  "src": "865:18:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 8246,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "865:6:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "864:20:23"
            },
            "returnParameters": {
              "id": 8249,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "899:0:23"
            },
            "scope": 8295,
            "src": "841:147:23",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              11964
            ],
            "body": {
              "id": 8273,
              "nodeType": "Block",
              "src": "1211:48:23",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 8269,
                      "name": "_supportedInterfaces",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8235,
                      "src": "1222:20:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
                        "typeString": "mapping(bytes4 => bool)"
                      }
                    },
                    "id": 8271,
                    "indexExpression": {
                      "id": 8270,
                      "name": "interfaceId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8263,
                      "src": "1243:11:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1222:33:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 8268,
                  "id": 8272,
                  "nodeType": "Return",
                  "src": "1215:40:23"
                }
              ]
            },
            "documentation": {
              "id": 8261,
              "nodeType": "StructuredDocumentation",
              "src": "991:127:23",
              "text": " @dev See {IERC165-supportsInterface}.\n Time complexity O(1), guaranteed to always use less than 30 000 gas."
            },
            "functionSelector": "01ffc9a7",
            "id": 8274,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "1129:17:23",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 8265,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1187:8:23"
            },
            "parameters": {
              "id": 8264,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8263,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "1154:11:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 8274,
                  "src": "1147:18:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 8262,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1147:6:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1146:20:23"
            },
            "returnParameters": {
              "id": 8268,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8267,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8274,
                  "src": "1205:4:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8266,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1205:4:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1204:6:23"
            },
            "scope": 8295,
            "src": "1120:139:23",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8293,
              "nodeType": "Block",
              "src": "1682:118:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 8283,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 8281,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8277,
                          "src": "1694:11:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30786666666666666666",
                          "id": 8282,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1709:10:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4294967295_by_1",
                            "typeString": "int_const 4294967295"
                          },
                          "value": "0xffffffff"
                        },
                        "src": "1694:25:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433136353a20696e76616c696420696e74657266616365206964",
                        "id": 8284,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1721:30:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_282912c0dfceceb28d77d0333f496b83948f9ba5b3154358a8b140b849289dee",
                          "typeString": "literal_string \"ERC165: invalid interface id\""
                        },
                        "value": "ERC165: invalid interface id"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_282912c0dfceceb28d77d0333f496b83948f9ba5b3154358a8b140b849289dee",
                          "typeString": "literal_string \"ERC165: invalid interface id\""
                        }
                      ],
                      "id": 8280,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1686:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1686:66:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8286,
                  "nodeType": "ExpressionStatement",
                  "src": "1686:66:23"
                },
                {
                  "expression": {
                    "id": 8291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 8287,
                        "name": "_supportedInterfaces",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8235,
                        "src": "1756:20:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
                          "typeString": "mapping(bytes4 => bool)"
                        }
                      },
                      "id": 8289,
                      "indexExpression": {
                        "id": 8288,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8277,
                        "src": "1777:11:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1756:33:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 8290,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1792:4:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1756:40:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8292,
                  "nodeType": "ExpressionStatement",
                  "src": "1756:40:23"
                }
              ]
            },
            "documentation": {
              "id": 8275,
              "nodeType": "StructuredDocumentation",
              "src": "1262:353:23",
              "text": " @dev Registers the contract as an implementer of the interface defined by\n `interfaceId`. Support of the actual ERC165 interface is automatic and\n registering its interface id is not required.\n See {IERC165-supportsInterface}.\n Requirements:\n - `interfaceId` cannot be the ERC165 invalid interface (`0xffffffff`)."
            },
            "id": 8294,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_registerInterface",
            "nameLocation": "1626:18:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8278,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8277,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "1652:11:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 8294,
                  "src": "1645:18:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 8276,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1645:6:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1644:20:23"
            },
            "returnParameters": {
              "id": 8279,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1682:0:23"
            },
            "scope": 8295,
            "src": "1617:183:23",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 8296,
        "src": "309:1524:23",
        "usedErrors": [
          9970
        ]
      }
    ],
    "src": "31:1803:23"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.17+commit.8df45f5f.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.11",
  "updatedAt": "2023-04-23T06:30:17.659Z",
  "devdoc": {
    "details": "Implementation of the {IERC165} interface. Contracts may inherit from this and call {_registerInterface} to declare their support of an interface.",
    "kind": "dev",
    "methods": {
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas."
      }
    },
    "stateVariables": {
      "_supportedInterfaces": {
        "details": "Mapping of interface ids to whether or not it's supported."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}