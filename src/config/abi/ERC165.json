{
  "contractName": "ERC165",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "CheckInterfaceNoMatch",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "checkInterface",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"CheckInterfaceNoMatch\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"checkInterface\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts may inherit from this and call {_registerInterface} to declare their support of an interface.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas.\"}},\"stateVariables\":{\"_supportedInterfaces\":{\"details\":\"Mapping of interface ids to whether or not it's supported.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/libs/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/libs/ERC165.sol\":{\"keccak256\":\"0xc68811663e3cd3e6fd0d93b4be2762d2c6305c4b9453ba251da4f75c7e56dd4d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a7bfef2fe982ac180ce3a00efc6aef61a25efeb336782760a3cc2fdba2c1be08\",\"dweb:/ipfs/QmSJ4bLkHhkhZe4uouXDyQ6T9rXX5nyMxxTVS9F8vDuxZ5\"]},\"project:/contracts/libs/Errors.sol\":{\"keccak256\":\"0xd7159f8eb46f667a98e823dfb1e822e759b9ebffaac9695702005f3a5d848463\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://14058e1e07eb752188bc5f99a01d8f07e388e20bb66180c500ca7425fe691d34\",\"dweb:/ipfs/QmfRzMR9DUu3Gwj2NqU5xrGNmGogHJsEWRs7SZeXP5Z6LN\"]},\"project:/contracts/libs/Initializable.sol\":{\"keccak256\":\"0xfbdeb6c0617ecd4d25b4fe864e6061750c769bc1ef39bf3380e7e329d4465cff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://50d6ff35724bdde82aa62fc48b2a4cf6ae2a24c6b0bf675a9ccbed2ea04b5661\",\"dweb:/ipfs/QmZt9mnj8y3URzyKox5oASW6cBqXvgRAsZ3KaJ7GxrdYbC\"]},\"project:/contracts/libs/Interface.sol\":{\"keccak256\":\"0x6a776a12bc757477053f74691f744487d2fb9de1a4aff9fb21518bebf8db6d6d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9431bb89f4b05b3b0a74b3b2c45ebdad593466e570baca41d64bde45021dfce4\",\"dweb:/ipfs/QmPrutz5K5jyxNA3es89bLjdpTX1yBa9yeRoYzvHRvRMC6\"]},\"project:/openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xcee5467d5d873fb75dae6f98c01a8d25dd609f9d0374c7d39217bd5f9539a2d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://546651335214a63d1ea3b1d3297228a1df2165f17063b2e45b589ade861ddedc\",\"dweb:/ipfs/QmNwpHiPBRB6dmNz9WLVYvy2kUhYHZgWBMWRcoDuMsuZt9\"]},\"project:/openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"project:/openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"project:/openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34\",\"dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR\"]},\"project:/openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"project:/openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"project:/openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"project:/openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610145806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806301ffc9a71461003b5780634c6e425b1461007c575b600080fd5b6100686100493660046100de565b6001600160e01b03191660009081526001602052604090205460ff1690565b604051901515815260200160405180910390f35b61008f61008a3660046100de565b610091565b005b6001600160e01b0319811660009081526001602052604090205460ff166100db57604051632aae78ef60e01b81526001600160e01b03198216600482015260240160405180910390fd5b50565b6000602082840312156100f057600080fd5b81356001600160e01b03198116811461010857600080fd5b939250505056fea2646970667358221220a0a3c5d57e6761a30d43e98187c8057da05e1480990a188c35d14c262759e4df64736f6c63430008110033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c806301ffc9a71461003b5780634c6e425b1461007c575b600080fd5b6100686100493660046100de565b6001600160e01b03191660009081526001602052604090205460ff1690565b604051901515815260200160405180910390f35b61008f61008a3660046100de565b610091565b005b6001600160e01b0319811660009081526001602052604090205460ff166100db57604051632aae78ef60e01b81526001600160e01b03198216600482015260240160405180910390fd5b50565b6000602082840312156100f057600080fd5b81356001600160e01b03198116811461010857600080fd5b939250505056fea2646970667358221220a0a3c5d57e6761a30d43e98187c8057da05e1480990a188c35d14c262759e4df64736f6c63430008110033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:701:41",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:41",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "83:217:41",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "129:16:41",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "138:1:41",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "141:1:41",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "131:6:41"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "131:12:41"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "131:12:41"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "104:7:41"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "113:9:41"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "100:3:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "100:23:41"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "125:2:41",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "96:3:41"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "96:32:41"
                  },
                  "nodeType": "YulIf",
                  "src": "93:52:41"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "154:36:41",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "180:9:41"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "167:12:41"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "167:23:41"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "158:5:41",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "254:16:41",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "263:1:41",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "266:1:41",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "256:6:41"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "256:12:41"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "256:12:41"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "212:5:41"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "223:5:41"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "234:3:41",
                                    "type": "",
                                    "value": "224"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "239:10:41",
                                    "type": "",
                                    "value": "0xffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "230:3:41"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "230:20:41"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "219:3:41"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "219:32:41"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "209:2:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "209:43:41"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "202:6:41"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "202:51:41"
                  },
                  "nodeType": "YulIf",
                  "src": "199:71:41"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "279:15:41",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "289:5:41"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "279:6:41"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "49:9:41",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "60:7:41",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "72:6:41",
                "type": ""
              }
            ],
            "src": "14:286:41"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "400:92:41",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "410:26:41",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "422:9:41"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "433:2:41",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "418:3:41"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "418:18:41"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "410:4:41"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "452:9:41"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "477:6:41"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "470:6:41"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "470:14:41"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "463:6:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "463:22:41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "445:6:41"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "445:41:41"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "445:41:41"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "369:9:41",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "380:6:41",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "391:4:41",
                "type": ""
              }
            ],
            "src": "305:187:41"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "596:103:41",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "606:26:41",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "618:9:41"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "629:2:41",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "614:3:41"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "614:18:41"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "606:4:41"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "648:9:41"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "663:6:41"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "675:3:41",
                                "type": "",
                                "value": "224"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "680:10:41",
                                "type": "",
                                "value": "0xffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "671:3:41"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "671:20:41"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "659:3:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "659:33:41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "641:6:41"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "641:52:41"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "641:52:41"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "565:9:41",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "576:6:41",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "587:4:41",
                "type": ""
              }
            ],
            "src": "497:202:41"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, shl(224, 0xffffffff)))\n    }\n}",
      "id": 41,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "308:1535:20:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "308:1535:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1138:131;;;;;;:::i;:::-;-1:-1:-1;;;;;;1232:33:20;1215:4;1232:33;;;:20;:33;;;;;;;;;1138:131;;;;470:14:41;;463:22;445:41;;433:2;418:18;1138:131:20;;;;;;;850:156;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;;1232:33:20;;1215:4;1232:33;;;:20;:33;;;;;;;;921:81;;968:34;;-1:-1:-1;;;968:34:20;;-1:-1:-1;;;;;;659:33:41;;968:34:20;;;641:52:41;614:18;;968:34:20;;;;;;;921:81;850:156;:::o;14:286:41:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:41;;209:43;;199:71;;266:1;263;256:12;199:71;289:5;14:286;-1:-1:-1;;;14:286:41:o",
  "source": "//SPDX-License-Identifier: MIT\npragma solidity 0.8.17;\n\nimport './Errors.sol';\nimport './Initializable.sol';\nimport './Interface.sol';\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts may inherit from this and call {_registerInterface} to declare\n * their support of an interface.\n */\ncontract ERC165 is Initializable, IERC165, IERC1651 {\n\t/*\n\t * bytes4(keccak256('supportsInterface(bytes4)')) == 0x01ffc9a7\n\t */\n\tbytes4 private constant _INTERFACE_ID_ERC165 = 0x01ffc9a7;\n\n\t/**\n\t * @dev Mapping of interface ids to whether or not it's supported.\n\t */\n\tmapping(bytes4 => bool) private _supportedInterfaces;\n\n\tfunction initERC165() internal initializer {\n\t\t// Derived contracts need only register support for their own interfaces,\n\t\t// we register support for ERC165 itself here\n\t\t_registerInterface(_INTERFACE_ID_ERC165);\n\t}\n\n\tfunction checkInterface(bytes4 interfaceId) view external override {\n\t\tif (!supportsInterface(interfaceId))\n\t\t\trevert CheckInterfaceNoMatch(interfaceId);\n\t}\n\n\t/**\n\t\t* @dev See {IERC165-supportsInterface}.\n\t\t*\n\t\t* Time complexity O(1), guaranteed to always use less than 30 000 gas.\n\t\t*/\n\tfunction supportsInterface(bytes4 interfaceId) public view override returns (bool) {\n\t\treturn _supportedInterfaces[interfaceId];\n\t}\n\n\t/**\n\t * @dev Registers the contract as an implementer of the interface defined by\n\t * `interfaceId`. Support of the actual ERC165 interface is automatic and\n\t * registering its interface id is not required.\n\t *\n\t * See {IERC165-supportsInterface}.\n\t *\n\t * Requirements:\n\t *\n\t * - `interfaceId` cannot be the ERC165 invalid interface (`0xffffffff`).\n\t */\n\tfunction _registerInterface(bytes4 interfaceId) internal virtual {\n\t\trequire(interfaceId != 0xffffffff, \"ERC165: invalid interface id\");\n\t\t_supportedInterfaces[interfaceId] = true;\n\t}\n\n\t//uint256[49] private __gap;\n}\n",
  "sourcePath": "/Users/louis/Project/hc/NFTSwap/SmartHolder/contracts/libs/ERC165.sol",
  "ast": {
    "absolutePath": "project:/contracts/libs/ERC165.sol",
    "exportedSymbols": {
      "Address": [
        8396
      ],
      "AddressEmpty": [
        7006
      ],
      "ApprovalToOwnerInERC721": [
        7018
      ],
      "ApproveAllToCallerInERC721": [
        7020
      ],
      "AssetNonExistsInAssetShell": [
        7028
      ],
      "CheckInterfaceNoMatch": [
        7004
      ],
      "CreateProposalLifespanLimitError": [
        7050
      ],
      "CreateProposalLoopTimeLimitError": [
        7052
      ],
      "CreateProposalVotePassEateLimitError": [
        7048
      ],
      "DuplicateVoteError": [
        7060
      ],
      "ERC165": [
        5981
      ],
      "Errors": [
        7067
      ],
      "IAsset": [
        7167
      ],
      "IAssetShell": [
        7162
      ],
      "IDAO": [
        7472
      ],
      "IDAOs": [
        7477
      ],
      "IERC165": [
        8605
      ],
      "IERC1651": [
        7089
      ],
      "IERC721": [
        7990
      ],
      "IERC7211": [
        7104
      ],
      "IERC721Enumerable": [
        8039
      ],
      "IERC721Metadata": [
        8066
      ],
      "IERC721Receiver": [
        8008
      ],
      "ILedger": [
        7252
      ],
      "IMember": [
        7350
      ],
      "IModule": [
        7133
      ],
      "IVotePool": [
        7432
      ],
      "Initializable": [
        7874
      ],
      "Initializable_": [
        7071
      ],
      "InsufficientBalance": [
        6988
      ],
      "InsufficientVotesInMember": [
        7034
      ],
      "LockTokenIDEmptyInAssetShell": [
        7032
      ],
      "MemberAlreadyExists": [
        7038
      ],
      "MemberNonExists": [
        7036
      ],
      "MemberRequestJoinAlreadyExists": [
        7040
      ],
      "NeedToUnlockAssetFirst": [
        7030
      ],
      "NonContractAddress": [
        7026
      ],
      "NonERC721ReceiverImplementer": [
        7022
      ],
      "OnlyOwnerAvailable": [
        7024
      ],
      "PayableAmountZero": [
        6992
      ],
      "PayableInsufficientAmount": [
        6990
      ],
      "PermissionDenied": [
        6996
      ],
      "PermissionDeniedForMember": [
        7000
      ],
      "PermissionDeniedForOnlyDAO": [
        6998
      ],
      "PermissionDeniedInERC721": [
        7010
      ],
      "ProposalAlreadyExistsInVotePool": [
        7044
      ],
      "ProposalClosed": [
        7056
      ],
      "ProposalDefaultLifespanLimitError": [
        7046
      ],
      "ProposalNonExistsInVotePool": [
        7042
      ],
      "ProposalNotPassed": [
        7066
      ],
      "SafeMath": [
        9782
      ],
      "SendValueFail": [
        6994
      ],
      "TokenIDAlreadyMintedInERC721": [
        7016
      ],
      "TokenIDEmpty": [
        7008
      ],
      "TokenIDNonExistentInERC721": [
        7014
      ],
      "TransferOfTokenIDThatIsNotOwnInERC721": [
        7012
      ],
      "VoteInsufficientVotes": [
        7062
      ],
      "VotesZero": [
        7054
      ],
      "VotingInProgress": [
        7064
      ],
      "VotingMemberNoMatch": [
        7058
      ]
    },
    "id": 5982,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5902,
        "literals": [
          "solidity",
          "0.8",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "31:23:20"
      },
      {
        "absolutePath": "project:/contracts/libs/Errors.sol",
        "file": "./Errors.sol",
        "id": 5903,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5982,
        "sourceUnit": 7068,
        "src": "56:22:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/libs/Initializable.sol",
        "file": "./Initializable.sol",
        "id": 5904,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5982,
        "sourceUnit": 7072,
        "src": "79:29:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/libs/Interface.sol",
        "file": "./Interface.sol",
        "id": 5905,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5982,
        "sourceUnit": 7478,
        "src": "109:25:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 5907,
              "name": "Initializable",
              "nameLocations": [
                "327:13:20"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7874,
              "src": "327:13:20"
            },
            "id": 5908,
            "nodeType": "InheritanceSpecifier",
            "src": "327:13:20"
          },
          {
            "baseName": {
              "id": 5909,
              "name": "IERC165",
              "nameLocations": [
                "342:7:20"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8605,
              "src": "342:7:20"
            },
            "id": 5910,
            "nodeType": "InheritanceSpecifier",
            "src": "342:7:20"
          },
          {
            "baseName": {
              "id": 5911,
              "name": "IERC1651",
              "nameLocations": [
                "351:8:20"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7089,
              "src": "351:8:20"
            },
            "id": 5912,
            "nodeType": "InheritanceSpecifier",
            "src": "351:8:20"
          }
        ],
        "canonicalName": "ERC165",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 5906,
          "nodeType": "StructuredDocumentation",
          "src": "136:171:20",
          "text": " @dev Implementation of the {IERC165} interface.\n Contracts may inherit from this and call {_registerInterface} to declare\n their support of an interface."
        },
        "fullyImplemented": true,
        "id": 5981,
        "linearizedBaseContracts": [
          5981,
          7089,
          8605,
          7874
        ],
        "name": "ERC165",
        "nameLocation": "317:6:20",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 5915,
            "mutability": "constant",
            "name": "_INTERFACE_ID_ERC165",
            "nameLocation": "461:20:20",
            "nodeType": "VariableDeclaration",
            "scope": 5981,
            "src": "437:57:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes4",
              "typeString": "bytes4"
            },
            "typeName": {
              "id": 5913,
              "name": "bytes4",
              "nodeType": "ElementaryTypeName",
              "src": "437:6:20",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "value": {
              "hexValue": "30783031666663396137",
              "id": 5914,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "484:10:20",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_33540519_by_1",
                "typeString": "int_const 33540519"
              },
              "value": "0x01ffc9a7"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "documentation": {
              "id": 5916,
              "nodeType": "StructuredDocumentation",
              "src": "498:76:20",
              "text": " @dev Mapping of interface ids to whether or not it's supported."
            },
            "id": 5920,
            "mutability": "mutable",
            "name": "_supportedInterfaces",
            "nameLocation": "608:20:20",
            "nodeType": "VariableDeclaration",
            "scope": 5981,
            "src": "576:52:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
              "typeString": "mapping(bytes4 => bool)"
            },
            "typeName": {
              "id": 5919,
              "keyType": {
                "id": 5917,
                "name": "bytes4",
                "nodeType": "ElementaryTypeName",
                "src": "584:6:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes4",
                  "typeString": "bytes4"
                }
              },
              "nodeType": "Mapping",
              "src": "576:23:20",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
                "typeString": "mapping(bytes4 => bool)"
              },
              "valueType": {
                "id": 5918,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "594:4:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 5929,
              "nodeType": "Block",
              "src": "675:172:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5926,
                        "name": "_INTERFACE_ID_ERC165",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5915,
                        "src": "822:20:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "id": 5925,
                      "name": "_registerInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5980,
                      "src": "803:18:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4)"
                      }
                    },
                    "id": 5927,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "803:40:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5928,
                  "nodeType": "ExpressionStatement",
                  "src": "803:40:20"
                }
              ]
            },
            "id": 5930,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 5923,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5922,
                  "name": "initializer",
                  "nameLocations": [
                    "663:11:20"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7776,
                  "src": "663:11:20"
                },
                "nodeType": "ModifierInvocation",
                "src": "663:11:20"
              }
            ],
            "name": "initERC165",
            "nameLocation": "641:10:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5921,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "651:2:20"
            },
            "returnParameters": {
              "id": 5924,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "675:0:20"
            },
            "scope": 5981,
            "src": "632:215:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              7088
            ],
            "body": {
              "id": 5945,
              "nodeType": "Block",
              "src": "917:89:20",
              "statements": [
                {
                  "condition": {
                    "id": 5939,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "925:31:20",
                    "subExpression": {
                      "arguments": [
                        {
                          "id": 5937,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5932,
                          "src": "944:11:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "id": 5936,
                        "name": "supportsInterface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5960,
                        "src": "926:17:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 5938,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "926:30:20",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5944,
                  "nodeType": "IfStatement",
                  "src": "921:81:20",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [
                        {
                          "id": 5941,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5932,
                          "src": "990:11:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "id": 5940,
                        "name": "CheckInterfaceNoMatch",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7004,
                        "src": "968:21:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$_t_bytes4_$returns$__$",
                          "typeString": "function (bytes4) pure"
                        }
                      },
                      "id": 5942,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "968:34:20",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 5943,
                    "nodeType": "RevertStatement",
                    "src": "961:41:20"
                  }
                }
              ]
            },
            "functionSelector": "4c6e425b",
            "id": 5946,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkInterface",
            "nameLocation": "859:14:20",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 5934,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "908:8:20"
            },
            "parameters": {
              "id": 5933,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5932,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "881:11:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 5946,
                  "src": "874:18:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 5931,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "874:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "873:20:20"
            },
            "returnParameters": {
              "id": 5935,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "917:0:20"
            },
            "scope": 5981,
            "src": "850:156:20",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              8604
            ],
            "body": {
              "id": 5959,
              "nodeType": "Block",
              "src": "1221:48:20",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 5955,
                      "name": "_supportedInterfaces",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5920,
                      "src": "1232:20:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
                        "typeString": "mapping(bytes4 => bool)"
                      }
                    },
                    "id": 5957,
                    "indexExpression": {
                      "id": 5956,
                      "name": "interfaceId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5949,
                      "src": "1253:11:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1232:33:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 5954,
                  "id": 5958,
                  "nodeType": "Return",
                  "src": "1225:40:20"
                }
              ]
            },
            "documentation": {
              "id": 5947,
              "nodeType": "StructuredDocumentation",
              "src": "1009:127:20",
              "text": " @dev See {IERC165-supportsInterface}.\n Time complexity O(1), guaranteed to always use less than 30 000 gas."
            },
            "functionSelector": "01ffc9a7",
            "id": 5960,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "1147:17:20",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 5951,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1197:8:20"
            },
            "parameters": {
              "id": 5950,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5949,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "1172:11:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 5960,
                  "src": "1165:18:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 5948,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1165:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1164:20:20"
            },
            "returnParameters": {
              "id": 5954,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5953,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5960,
                  "src": "1215:4:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5952,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1215:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1214:6:20"
            },
            "scope": 5981,
            "src": "1138:131:20",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5979,
              "nodeType": "Block",
              "src": "1692:118:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 5969,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5967,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5963,
                          "src": "1704:11:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30786666666666666666",
                          "id": 5968,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1719:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4294967295_by_1",
                            "typeString": "int_const 4294967295"
                          },
                          "value": "0xffffffff"
                        },
                        "src": "1704:25:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433136353a20696e76616c696420696e74657266616365206964",
                        "id": 5970,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1731:30:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_282912c0dfceceb28d77d0333f496b83948f9ba5b3154358a8b140b849289dee",
                          "typeString": "literal_string \"ERC165: invalid interface id\""
                        },
                        "value": "ERC165: invalid interface id"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_282912c0dfceceb28d77d0333f496b83948f9ba5b3154358a8b140b849289dee",
                          "typeString": "literal_string \"ERC165: invalid interface id\""
                        }
                      ],
                      "id": 5966,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1696:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5971,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1696:66:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5972,
                  "nodeType": "ExpressionStatement",
                  "src": "1696:66:20"
                },
                {
                  "expression": {
                    "id": 5977,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 5973,
                        "name": "_supportedInterfaces",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5920,
                        "src": "1766:20:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
                          "typeString": "mapping(bytes4 => bool)"
                        }
                      },
                      "id": 5975,
                      "indexExpression": {
                        "id": 5974,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5963,
                        "src": "1787:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1766:33:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 5976,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1802:4:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1766:40:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5978,
                  "nodeType": "ExpressionStatement",
                  "src": "1766:40:20"
                }
              ]
            },
            "documentation": {
              "id": 5961,
              "nodeType": "StructuredDocumentation",
              "src": "1272:353:20",
              "text": " @dev Registers the contract as an implementer of the interface defined by\n `interfaceId`. Support of the actual ERC165 interface is automatic and\n registering its interface id is not required.\n See {IERC165-supportsInterface}.\n Requirements:\n - `interfaceId` cannot be the ERC165 invalid interface (`0xffffffff`)."
            },
            "id": 5980,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_registerInterface",
            "nameLocation": "1636:18:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5964,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5963,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "1662:11:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 5980,
                  "src": "1655:18:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 5962,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1655:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1654:20:20"
            },
            "returnParameters": {
              "id": 5965,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1692:0:20"
            },
            "scope": 5981,
            "src": "1627:183:20",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 5982,
        "src": "308:1535:20",
        "usedErrors": [
          7004
        ]
      }
    ],
    "src": "31:1813:20"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.17+commit.8df45f5f.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.11",
  "updatedAt": "2023-04-01T07:55:49.825Z",
  "devdoc": {
    "details": "Implementation of the {IERC165} interface. Contracts may inherit from this and call {_registerInterface} to declare their support of an interface.",
    "kind": "dev",
    "methods": {
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas."
      }
    },
    "stateVariables": {
      "_supportedInterfaces": {
        "details": "Mapping of interface ids to whether or not it's supported."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}