{
  "contractName": "Ownable",
  "abi": [
    {
      "inputs": [],
      "name": "AddressEmpty",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OnlyOwnerAvailable",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AddressEmpty\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyOwnerAvailable\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/libs/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/libs/Context.sol\":{\"keccak256\":\"0x987a13b7f69b7699a158b1e57387f00ca4dd29edfea0b753ec46e1447e3619fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0425dcafb68b0c5af6c89f9fd727d6cced266b92650ccbcecd1cf0e318bfec4d\",\"dweb:/ipfs/QmQqfvsjqqGJJybqsrHPVDGiaw2GJMVuTGwNZzKYZSmyC9\"]},\"project:/contracts/libs/Errors.sol\":{\"keccak256\":\"0xd7159f8eb46f667a98e823dfb1e822e759b9ebffaac9695702005f3a5d848463\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://14058e1e07eb752188bc5f99a01d8f07e388e20bb66180c500ca7425fe691d34\",\"dweb:/ipfs/QmfRzMR9DUu3Gwj2NqU5xrGNmGogHJsEWRs7SZeXP5Z6LN\"]},\"project:/contracts/libs/Ownable.sol\":{\"keccak256\":\"0x167cde1045f946e19a5bb0e608621eb6a3fbc012b0726c7199f6f6ab61b9f4d9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://257a0db278b384f96eee5be43e71b511fbd241c105f0e38afc9c6a50820116bb\",\"dweb:/ipfs/QmcZpCAThgoPjesynqfrPyjQ6cabvSwXX17HtNeRj5PLer\"]},\"project:/openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.17;\n\nimport './Errors.sol';\nimport './Context.sol';\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n\taddress private _owner;\n\n\tevent OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n\t/**\n\t * @dev Initializes the contract setting the deployer as the initial owner.\n\t */\n\tfunction initOwnable() internal {\n\t\taddress msgSender = _msgSender();\n\t\t_owner = msgSender;\n\t\temit OwnershipTransferred(address(0), msgSender);\n\t}\n\n\t/**\n\t * @dev Returns the address of the current owner.\n\t */\n\tfunction owner() public view virtual returns (address) {\n\t\treturn _owner;\n\t}\n\n\t/**\n\t * @dev Throws if called by any account other than the owner.\n\t */\n\tmodifier onlyOwner() {\n\t\t//require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n\t\tif (owner() != _msgSender()) revert OnlyOwnerAvailable();\n\t\t_;\n\t}\n\n\t/**\n\t * @dev Leaves the contract without owner. It will not be possible to call\n\t * `onlyOwner` functions anymore. Can only be called by the current owner.\n\t *\n\t * NOTE: Renouncing ownership will leave the contract without an owner,\n\t * thereby removing any functionality that is only available to the owner.\n\t */\n\tfunction renounceOwnership() public virtual onlyOwner {\n\t\temit OwnershipTransferred(_owner, address(0));\n\t\t_owner = address(0);\n\t}\n\n\t/**\n\t * @dev Transfers ownership of the contract to a new account (`newOwner`).\n\t * Can only be called by the current owner.\n\t */\n\tfunction transferOwnership(address newOwner) public virtual onlyOwner {\n\t\t//require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n\t\tif (newOwner == address(0)) revert AddressEmpty();\n\t\temit OwnershipTransferred(_owner, newOwner);\n\t\t_owner = newOwner;\n\t}\n}\n",
  "sourcePath": "/Users/louis/Project/hc/NFTSwap/SmartHolder/contracts/libs/Ownable.sol",
  "ast": {
    "absolutePath": "project:/contracts/libs/Ownable.sol",
    "exportedSymbols": {
      "AddressEmpty": [
        7006
      ],
      "ApprovalToOwnerInERC721": [
        7018
      ],
      "ApproveAllToCallerInERC721": [
        7020
      ],
      "AssetNonExistsInAssetShell": [
        7028
      ],
      "CheckInterfaceNoMatch": [
        7004
      ],
      "Context": [
        8418
      ],
      "Context_": [
        5900
      ],
      "CreateProposalLifespanLimitError": [
        7050
      ],
      "CreateProposalLoopTimeLimitError": [
        7052
      ],
      "CreateProposalVotePassEateLimitError": [
        7048
      ],
      "DuplicateVoteError": [
        7060
      ],
      "Errors": [
        7067
      ],
      "InsufficientBalance": [
        6988
      ],
      "InsufficientVotesInMember": [
        7034
      ],
      "LockTokenIDEmptyInAssetShell": [
        7032
      ],
      "MemberAlreadyExists": [
        7038
      ],
      "MemberNonExists": [
        7036
      ],
      "MemberRequestJoinAlreadyExists": [
        7040
      ],
      "NeedToUnlockAssetFirst": [
        7030
      ],
      "NonContractAddress": [
        7026
      ],
      "NonERC721ReceiverImplementer": [
        7022
      ],
      "OnlyOwnerAvailable": [
        7024
      ],
      "Ownable": [
        7588
      ],
      "PayableAmountZero": [
        6992
      ],
      "PayableInsufficientAmount": [
        6990
      ],
      "PermissionDenied": [
        6996
      ],
      "PermissionDeniedForMember": [
        7000
      ],
      "PermissionDeniedForOnlyDAO": [
        6998
      ],
      "PermissionDeniedInERC721": [
        7010
      ],
      "ProposalAlreadyExistsInVotePool": [
        7044
      ],
      "ProposalClosed": [
        7056
      ],
      "ProposalDefaultLifespanLimitError": [
        7046
      ],
      "ProposalNonExistsInVotePool": [
        7042
      ],
      "ProposalNotPassed": [
        7066
      ],
      "SendValueFail": [
        6994
      ],
      "TokenIDAlreadyMintedInERC721": [
        7016
      ],
      "TokenIDEmpty": [
        7008
      ],
      "TokenIDNonExistentInERC721": [
        7014
      ],
      "TransferOfTokenIDThatIsNotOwnInERC721": [
        7012
      ],
      "VoteInsufficientVotes": [
        7062
      ],
      "VotesZero": [
        7054
      ],
      "VotingInProgress": [
        7064
      ],
      "VotingMemberNoMatch": [
        7058
      ]
    },
    "id": 7589,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7479,
        "literals": [
          "solidity",
          "0.8",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:25"
      },
      {
        "absolutePath": "project:/contracts/libs/Errors.sol",
        "file": "./Errors.sol",
        "id": 7480,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7589,
        "sourceUnit": 7068,
        "src": "57:22:25",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/libs/Context.sol",
        "file": "./Context.sol",
        "id": 7481,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7589,
        "sourceUnit": 5901,
        "src": "80:23:25",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 7483,
              "name": "Context",
              "nameLocations": [
                "628:7:25"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8418,
              "src": "628:7:25"
            },
            "id": 7484,
            "nodeType": "InheritanceSpecifier",
            "src": "628:7:25"
          }
        ],
        "canonicalName": "Ownable",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 7482,
          "nodeType": "StructuredDocumentation",
          "src": "104:494:25",
          "text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
        },
        "fullyImplemented": true,
        "id": 7588,
        "linearizedBaseContracts": [
          7588,
          8418
        ],
        "name": "Ownable",
        "nameLocation": "617:7:25",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 7486,
            "mutability": "mutable",
            "name": "_owner",
            "nameLocation": "655:6:25",
            "nodeType": "VariableDeclaration",
            "scope": 7588,
            "src": "639:22:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 7485,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "639:7:25",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
            "id": 7492,
            "name": "OwnershipTransferred",
            "nameLocation": "671:20:25",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7491,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7488,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "previousOwner",
                  "nameLocation": "708:13:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 7492,
                  "src": "692:29:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7487,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "692:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7490,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nameLocation": "739:8:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 7492,
                  "src": "723:24:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7489,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "723:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "691:57:25"
            },
            "src": "665:84:25"
          },
          {
            "body": {
              "id": 7513,
              "nodeType": "Block",
              "src": "871:114:25",
              "statements": [
                {
                  "assignments": [
                    7497
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7497,
                      "mutability": "mutable",
                      "name": "msgSender",
                      "nameLocation": "883:9:25",
                      "nodeType": "VariableDeclaration",
                      "scope": 7513,
                      "src": "875:17:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 7496,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "875:7:25",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7500,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7498,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8408,
                      "src": "895:10:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 7499,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "895:12:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "875:32:25"
                },
                {
                  "expression": {
                    "id": 7503,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7501,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7486,
                      "src": "911:6:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7502,
                      "name": "msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7497,
                      "src": "920:9:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "911:18:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 7504,
                  "nodeType": "ExpressionStatement",
                  "src": "911:18:25"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 7508,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "967:1:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 7507,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "959:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 7506,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "959:7:25",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 7509,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "959:10:25",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7510,
                        "name": "msgSender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7497,
                        "src": "971:9:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7505,
                      "name": "OwnershipTransferred",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7492,
                      "src": "938:20:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 7511,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "938:43:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7512,
                  "nodeType": "EmitStatement",
                  "src": "933:48:25"
                }
              ]
            },
            "documentation": {
              "id": 7493,
              "nodeType": "StructuredDocumentation",
              "src": "752:85:25",
              "text": " @dev Initializes the contract setting the deployer as the initial owner."
            },
            "id": 7514,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initOwnable",
            "nameLocation": "848:11:25",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7494,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "859:2:25"
            },
            "returnParameters": {
              "id": 7495,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "871:0:25"
            },
            "scope": 7588,
            "src": "839:146:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7522,
              "nodeType": "Block",
              "src": "1104:21:25",
              "statements": [
                {
                  "expression": {
                    "id": 7520,
                    "name": "_owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7486,
                    "src": "1115:6:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 7519,
                  "id": 7521,
                  "nodeType": "Return",
                  "src": "1108:13:25"
                }
              ]
            },
            "documentation": {
              "id": 7515,
              "nodeType": "StructuredDocumentation",
              "src": "988:59:25",
              "text": " @dev Returns the address of the current owner."
            },
            "functionSelector": "8da5cb5b",
            "id": 7523,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "owner",
            "nameLocation": "1058:5:25",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7516,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1063:2:25"
            },
            "returnParameters": {
              "id": 7519,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7518,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7523,
                  "src": "1095:7:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7517,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1095:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1094:9:25"
            },
            "scope": 7588,
            "src": "1049:76:25",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7536,
              "nodeType": "Block",
              "src": "1222:143:25",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 7530,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 7526,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7523,
                        "src": "1304:5:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 7527,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1304:7:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 7528,
                        "name": "_msgSender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8408,
                        "src": "1315:10:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 7529,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1315:12:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1304:23:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7534,
                  "nodeType": "IfStatement",
                  "src": "1300:56:25",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 7531,
                        "name": "OnlyOwnerAvailable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7024,
                        "src": "1336:18:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 7532,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1336:20:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 7533,
                    "nodeType": "RevertStatement",
                    "src": "1329:27:25"
                  }
                },
                {
                  "id": 7535,
                  "nodeType": "PlaceholderStatement",
                  "src": "1360:1:25"
                }
              ]
            },
            "documentation": {
              "id": 7524,
              "nodeType": "StructuredDocumentation",
              "src": "1128:71:25",
              "text": " @dev Throws if called by any account other than the owner."
            },
            "id": 7537,
            "name": "onlyOwner",
            "nameLocation": "1210:9:25",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 7525,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1219:2:25"
            },
            "src": "1201:164:25",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7558,
              "nodeType": "Block",
              "src": "1737:76:25",
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 7544,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7486,
                        "src": "1767:6:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 7547,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1783:1:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 7546,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1775:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 7545,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1775:7:25",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 7548,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1775:10:25",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7543,
                      "name": "OwnershipTransferred",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7492,
                      "src": "1746:20:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 7549,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1746:40:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7550,
                  "nodeType": "EmitStatement",
                  "src": "1741:45:25"
                },
                {
                  "expression": {
                    "id": 7556,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7551,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7486,
                      "src": "1790:6:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 7554,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1807:1:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 7553,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1799:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 7552,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1799:7:25",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 7555,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1799:10:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1790:19:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 7557,
                  "nodeType": "ExpressionStatement",
                  "src": "1790:19:25"
                }
              ]
            },
            "documentation": {
              "id": 7538,
              "nodeType": "StructuredDocumentation",
              "src": "1368:313:25",
              "text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
            },
            "functionSelector": "715018a6",
            "id": 7559,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7541,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7540,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1727:9:25"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7537,
                  "src": "1727:9:25"
                },
                "nodeType": "ModifierInvocation",
                "src": "1727:9:25"
              }
            ],
            "name": "renounceOwnership",
            "nameLocation": "1692:17:25",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7539,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1709:2:25"
            },
            "returnParameters": {
              "id": 7542,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1737:0:25"
            },
            "scope": 7588,
            "src": "1683:130:25",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7586,
              "nodeType": "Block",
              "src": "2017:204:25",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 7572,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 7567,
                      "name": "newOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7562,
                      "src": "2104:8:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 7570,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2124:1:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 7569,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2116:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 7568,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2116:7:25",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 7571,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2116:10:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2104:22:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7576,
                  "nodeType": "IfStatement",
                  "src": "2100:49:25",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 7573,
                        "name": "AddressEmpty",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7006,
                        "src": "2135:12:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 7574,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2135:14:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 7575,
                    "nodeType": "RevertStatement",
                    "src": "2128:21:25"
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 7578,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7486,
                        "src": "2179:6:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7579,
                        "name": "newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7562,
                        "src": "2187:8:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7577,
                      "name": "OwnershipTransferred",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7492,
                      "src": "2158:20:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 7580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2158:38:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7581,
                  "nodeType": "EmitStatement",
                  "src": "2153:43:25"
                },
                {
                  "expression": {
                    "id": 7584,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7582,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7486,
                      "src": "2200:6:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7583,
                      "name": "newOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7562,
                      "src": "2209:8:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2200:17:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 7585,
                  "nodeType": "ExpressionStatement",
                  "src": "2200:17:25"
                }
              ]
            },
            "documentation": {
              "id": 7560,
              "nodeType": "StructuredDocumentation",
              "src": "1816:129:25",
              "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
            },
            "functionSelector": "f2fde38b",
            "id": 7587,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7565,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7564,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "2007:9:25"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7537,
                  "src": "2007:9:25"
                },
                "nodeType": "ModifierInvocation",
                "src": "2007:9:25"
              }
            ],
            "name": "transferOwnership",
            "nameLocation": "1956:17:25",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7563,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7562,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nameLocation": "1982:8:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 7587,
                  "src": "1974:16:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7561,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1974:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1973:18:25"
            },
            "returnParameters": {
              "id": 7566,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2017:0:25"
            },
            "scope": 7588,
            "src": "1947:274:25",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "scope": 7589,
        "src": "599:1624:25",
        "usedErrors": [
          7006,
          7024
        ]
      }
    ],
    "src": "32:2192:25"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.17+commit.8df45f5f.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.11",
  "updatedAt": "2023-04-01T07:55:49.850Z",
  "devdoc": {
    "details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}